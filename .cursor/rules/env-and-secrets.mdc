---
description: Enforce environment variable handling and secrets hygiene with Vercel
globs:
alwaysApply: true
---
# Environment & secrets policy
- Do not commit `.env*` files to the repo (e.g. `.env`, `.env.local`, `.env.production`, `.env.development`).
- Manage secrets in Vercel Environment Variables (Production / Preview).
- Never hardcode API keys, tokens, or secrets in code, content, or markdown.

# Local development (Yarn + Vercel)
- Link the project and pull envs locally from `next/`:
  - `yarn preview:link` (or `vercel link --yes`)
  - `yarn preview:env:pull` (or `vercel env pull .env.local`)
- Only read environment variables via `process.env.*` at runtime or in build as appropriate.

# Next.js env conventions
- Use `NEXT_PUBLIC_*` prefix only for variables that are safe to expose to the browser.
- Server-only secrets must NOT be prefixed with `NEXT_PUBLIC_` and should only be used on server-side code paths (e.g. getServerSideProps, API routes).

# Vercel environments
- Keep distinct values per environment (Production vs Preview) in Vercel settings.
- Validate Preview behavior via a Vercel Preview URL before promoting to Production.
